name: 🚀 Generate Video

on:
  push:
    paths:
      # Memicu action HANYA jika file-file penting ini berubah
      - "data_berita.txt"
      - "videogen_beta.py"
      - ".github/workflows/generate.yml"
      - "requirements.txt"
  
  # Memungkinkan Anda menjalankan action ini secara manual dari tab "Actions"
  workflow_dispatch:

jobs:
  build_video:
    runs-on: ubuntu-latest

    steps:
      # 1. Mengunduh kode, font, dan file data Anda ke server
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      # 2. Menyiapkan lingkungan Python 3.11
      - name: 2. Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip" # Menyimpan cache dependensi agar berjalan lebih cepat

      # 3. [INI SOLUSINYA] Install library sistem untuk render font
      # Pillow (PIL) membutuhkan 'libfreetype' untuk memuat file .ttf
      - name: 3. Install System Dependencies (For Fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y libfreetype6-dev

      # 4. Install library Python dari requirements.txt
      # (Ini sudah termasuk 'imageio[ffmpeg]', jadi FFmpeg ter-install otomatis)
      - name: 4. Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "---  libraries terinstall: ---"
          pip freeze | grep -E "moviepy|Pillow|numpy|imageio"

      # 5. Menjalankan skrip Python Anda
      - name: 5. Run Video Generation Script
        run: |
          echo "🚀 Mulai menjalankan 'videogen_beta.py'..."
          python videogen_beta.py
          echo "✅ Skrip selesai dijalankan."

      # 6. Memeriksa apakah file video benar-benar dibuat
      - name: 6. Verify Video Output
        run: |
          echo "--- Mengecek hasil file: ---"
          if ! ls output_video_*.mp4 1> /dev/null 2>&1; then
            echo "❌ GAGAL: Tidak ada file 'output_video_*.mp4' yang ditemukan!"
            exit 1
          fi
          echo "👍 File video ditemukan:"
          ls -lh output_video_*.mp4

      # 7. Mengunggah file video yang sudah jadi sebagai 'artifact'
      - name: 7. Upload Video Artifacts
        if: success() # Hanya berjalan jika langkah sebelumnya sukses
        uses: actions/upload-artifact@v4
        with:
          name: generated-videos
          path: output_video_*.mp4
          retention-days: 7 # Simpan hasil video selama 7 hari
